plugins {
    id 'fabric-loom' version '1.4.4'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

def targetJavaVersion = 17
group = project.maven_group

repositories {
    maven { url "https://api.modrinth.com/maven" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // SQL Drivers
    shadow "org.xerial:sqlite-jdbc:${project.sqlite_version}"
    shadow "mysql:mysql-connector-java:${project.mysql_version}"
    //Config
    shadow "com.fasterxml.jackson.dataformat:jackson-dataformat-toml:${project.jackson_version}"

    // Extra
    compileOnly "org.projectlombok:lombok:1.18.28"
	annotationProcessor "org.projectlombok:lombok:1.18.28"
    modImplementation "maven.modrinth:easy-eula:1.0.0"
}

shadowJar {
    configurations = [project.configurations.shadow]

    exclude 'LICENSE'
    exclude 'README'
    exclude 'INFO_BIN'
    exclude 'INFO_SRC'
    minimize {
        exclude(dependency('org.xerial:sqlite-jdbc:.*'))
        exclude(dependency('mysql:mysql-connector-java:.*'))
    }
    minimize()
}

jar.finalizedBy(shadowJar)

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}